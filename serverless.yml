service: prototype

plugins:
  - serverless-webpack

provider:
  name: aws
  runtime: nodejs4.3
  region: ap-northeast-1
  stage: dev
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: 'arn:aws:dynamodb:ap-northeast-1:*:*'

custom:
  authorizer:
    name: authorization
    type: 'TOKEN'
    identitySource: method.request.header.Authorization
    resultTtlInSeconds: 0
  webpack: webpack.config.js

functions:
  createClient:
    handler: client.create
    events:
      - http:
          path: clients
          method: post
          authorizer: ${self:custom.authorizer}
          cors: true
  findClient:
    handler: client.find
    events:
      - http:
          path: clients/{id}
          method: get
          authorizer: ${self:custom.authorizer}
          cors: true
  createUser:
    handler: user.create
    events:
      - http:
          path: users
          method: post
          authorizer: ${self:custom.authorizer}
          cors: true
  findUser:
    handler: user.find
    events:
      - http:
          path: users/{id}
          method: get
          authorizer: ${self:custom.authorizer}
          cors: true
  authorization:
    handler: auth.authorization
    events:
      - http:
          path: auth/authorization
          method: get
          cors: true

resources:
  Resources:
    ClientsDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Delete
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: 'Clients'
    UsersDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Delete
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
          -
            AttributeName: email
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        GlobalSecondaryIndexes:
          -
            IndexName: globalIndex1
            KeySchema:
              -
                AttributeName: email
                KeyType: HASH
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: 'Users'
